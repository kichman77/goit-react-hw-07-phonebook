{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Notification/Notification.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contactsAction.js","redux/contacts/operations.js","redux/contacts/contactsSelectors.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","redux/filter/filterAction.js","components/Filter/Filter.js","App.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/store.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getContactsRequest","getContactsSuccess","getContactsError","axios","defaults","baseURL","addContact","contact","dispatch","post","then","response","data","catch","error","deleteContact","id","delete","getContacts","get","state","contacts","getFilter","filter","getLoading","loading","getFilteredContacts","createSelector","name","toLowerCase","includes","getContactById","_","contactId","find","Notification","className","style","wrapper","notif","ContactForm","phone","isExist","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","uuidv4","elem","console","log","setTimeout","this","styles","form","onSubmit","onChange","placeholder","type","required","btn","Component","mapDispatchToProps","operations","connect","store","selectors","handleDelete","showContacts","list","map","el","onClick","filterContacts","filterContact","input","App","isLoading","contactReducer","createReducer","action","payload","filterReducer","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e55b80f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Notification_wrapper__Uy_Qy\",\"notif\":\"Notification_notif__1XW0G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","// const addContact = (contact) => {\n//   return {\n//     type: \"ADD_CONTACT\",\n//     payload: { id: contact.id, name: contact.name, phone: contact.phone },\n//   };\n// };\n\n// const deleteContact = (id) => {\n//   return {\n//     type: \"DELETE_CONTACT\",\n//     payload: { id },\n//   };\n// };\n// export default { addContact, deleteContact };\n\nimport { createAction } from \"@reduxjs/toolkit\";\nimport actionTypes from \"../actionTypes\";\n// const addContact = createAction(actionTypes.ADD_CONTACT);\n// const deleteContact = createAction(actionTypes.DELETE_CONTACT);\n\nconst addContactRequest = createAction(\"ADD_CONTACT_REQUEST\");\nconst addContactSuccess = createAction(\"ADD_CONTACT_SUCCESS\");\nconst addContactError = createAction(\"ADD_CONTACT_ERROR\");\n\nconst deleteContactRequest = createAction(\"DELETE_CONTACT_REQUEST\");\nconst deleteContactSuccess = createAction(\"DELETE_CONTACT_SUCCESS\");\nconst deleteContactError = createAction(\"DELETE_CONTACT_ERROR\");\n\nconst getContactsRequest = createAction(\"GET_CONTACTS_REQUEST\");\nconst getContactsSuccess = createAction(\"GET_CONTACTS_SUCCESS\");\nconst getContactsError = createAction(\"GET_CONTACTS_ERROR\");\n\n// export default { addContact, deleteContact };\nexport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n};\n","import axios from \"axios\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n} from \"./contactsAction\";\n\n// console.log(axios);\n\naxios.defaults.baseURL = \"http://localhost:4040/\";\n\nconst addContact = (contact) => (dispatch) => {\n  dispatch(addContactRequest());\n  axios\n    .post(\"contacts\", contact)\n    .then((response) => response.data)\n    .then((data) => {\n      // console.log(data);\n      data = dispatch(addContactSuccess(data));\n      return data;\n    })\n    .catch((error) => dispatch(addContactError(error)));\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n\nconst getContacts = () => (dispatch) => {\n  dispatch(getContactsRequest());\n  axios\n    .get(\"contacts\")\n    .then((response) => response.data)\n    .then((data) => dispatch(getContactsSuccess(data)))\n    .catch((error) => dispatch(getContactsError(error)));\n};\n\nexport default { addContact, deleteContact, getContacts };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = (state) => {\n  return state.loading;\n};\n\nconst getContacts = (state) => {\n  return state.contacts;\n};\n\nconst getFilter = (state) => {\n  return state.filter;\n};\n\nconst getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(filter);\n    });\n  }\n);\n\nconst getContactById = createSelector(\n  [\n    getContacts,\n    (_, contactId) => {\n      return contactId;\n    },\n  ],\n  (contacts, contactId) => {\n    return contacts.find((contact) => {\n      return contact.id === contactId;\n    });\n  }\n);\nexport default {\n  getLoading,\n  getContacts,\n  getFilter,\n  getFilteredContacts,\n  getContactById,\n};\n","import React from \"react\";\nimport style from \"./Notification.module.css\";\n\nconst Notification = () => {\n  return (\n    <>\n      <div className={style.wrapper}>\n        <p className={style.notif}>Contact already exist</p>\n      </div>\n    </>\n  );\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { selectors, operations } from \"../../redux/contacts\";\nimport Notification from \"../Notification/Notification\";\n\nclass ContactForm extends Component {\n  static propTypes = { addContact: PropTypes.func.isRequired };\n  state = {\n    name: \"\",\n    phone: \"\",\n    isExist: false,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { name, phone } = this.state;\n    const { contacts, addContact } = this.props;\n    const contact = {\n      id: uuidv4(),\n      name,\n      phone,\n    };\n    const condition = contacts.find((elem) => {\n      console.log(elem.name);\n      return elem.name === contact.name;\n    });\n\n    if (condition) {\n      this.setState({ isExist: true });\n      setTimeout(() => this.setState({ isExist: false }), 2000);\n      return;\n    }\n    addContact(contact);\n    this.setState({ name: \"\", phone: \"\" });\n  };\n\n  render() {\n    const { name, phone, isExist } = this.state;\n    const { handleSubmit, handleChange } = this;\n    return (\n      <>\n        {isExist && <Notification />}\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <input\n            onChange={handleChange}\n            placeholder=\"name\"\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            required\n          />\n          <input\n            onChange={handleChange}\n            placeholder=\"phone number\"\n            name=\"phone\"\n            type=\"tel\"\n            value={phone}\n            required\n          />\n          <button className={styles.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return { contacts: selectors.getContacts(store) };\n};\nconst mapDispatchToProps = { addContact: operations.addContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport styles from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { selectors, operations } from \"../../redux/contacts\";\n\nconst ContactList = ({ showContacts, handleDelete }) => {\n  return (\n    <>\n      {showContacts && (\n        <ul className={styles.list}>\n          {showContacts.map((el) => {\n            return (\n              <li\n                onClick={() => {\n                  handleDelete(el.id);\n                }}\n                key={el.id}\n              >\n                {el.name}\n                <span>{el.phone}</span>\n                <button className={styles.btn} type=\"button\">\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (store) => {\n  return { showContacts: selectors.getFilteredContacts(store) };\n};\nconst mapDispatchToProps = {\n  handleDelete: operations.deleteContact,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  showContacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n  handleDelete: PropTypes.func.isRequired,\n};\n","// const filterAction = (value) => {\n//   return {\n//     type: \"FILTER_CONTACT\",\n//     payload: value,\n//   };\n// };\n\n// export default { filterAction };\n\nimport { createAction } from \"@reduxjs/toolkit\";\nconst filterContacts = createAction(\"FILTER_CONTACTS\");\n\nexport default filterContacts;\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { selectors } from \"../../redux/contacts\";\nimport filterContacts from \"../../redux/filter/filterAction\";\n\nconst Filter = ({ filterContact, filter }) => {\n  return (\n    <input\n      value={filter}\n      className={styles.input}\n      onChange={(event) => {\n        return filterContact(event.target.value);\n      }}\n      placeholder=\"Find contacts by name\"\n      name=\"filter\"\n      type=\"text\"\n    />\n  );\n};\nconst mapStateToProps = (state) => {\n  return { filter: selectors.getFilter(state) };\n};\nconst mapDispatchToProps = { filterContact: filterContacts };\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  filterContact: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport { connect } from \"react-redux\";\nimport { selectors, operations } from \"./redux/contacts\";\nimport \"./App.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getContacts()\n  }\n\n  render() {\n    const { isLoading } = this.props;\n    return (\n      <>\n        {isLoading && (\n          <h1>Мы тоже хотим, чтобы все было легко и просто!!! Но......</h1>\n        )}\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoading: selectors.getLoading(state),\n  };\n};\n\nconst mapDispatchToProps = {\n  getContacts: operations.getContacts,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// const contactReducer = (state = contacts, action) => {\n//   switch (action.type) {\n//     case \"ADD_CONTACT\":\n//       console.log(state);\n//       const addState = [...state, action.payload];\n//       localStorage.setItem(\"contacts\", JSON.stringify(addState));\n//       return addState;\n//     case \"DELETE_CONTACT\":\n//       const deleteState = state.filter(\n//         (contact) => contact.id !== action.payload.id\n//       );\n//       localStorage.setItem(\"contacts\", JSON.stringify(deleteState));\n\n//       return deleteState;\n\n//     default:\n//       return state;\n//   }\n// };\n\nimport { createReducer } from \"@reduxjs/toolkit\";\n// import contactAction from \"../contacts/contactsAction\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n} from \"./contactsAction\";\n\n// const contacts = JSON.parse(localStorage.getItem(\"contacts\")) || [\n//   { id: \"id-1\", name: \"Rosie Simpson\", phone: \"459-12-56\" },\n//   { id: \"id-2\", name: \"Hermione Kline\", phone: \"443-89-12\" },\n//   { id: \"id-3\", name: \"Eden Clements\", phone: \"645-17-79\" },\n//   { id: \"id-4\", name: \"Annie Copeland\", phone: \"227-91-26\" },\n// ];\n\nconst addContact = (state, action) => {\n  const addState = [...state, action.payload];\n  // localStorage.setItem(\"contacts\", JSON.stringify(addState));\n  return addState;\n};\nconst deleteContact = (state, action) => {\n  const deleteState = state.filter((contact) => contact.id !== action.payload);\n  // localStorage.setItem(\"contacts\", JSON.stringify(deleteState));\n  return deleteState;\n};\n\nconst contactReducer = createReducer([], {\n  // [contactAction.addContact]: addContact,\n  // [contactAction.deleteContact]: deleteContact,\n  [addContactSuccess]: addContact,\n  [deleteContactSuccess]: deleteContact,\n  [getContactsSuccess]: (state, action) => {\n    return action.payload;\n  },\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [getContactsRequest]: () => true,\n  [getContactsSuccess]: () => false,\n  [getContactsError]: () => false,\n});\nexport { contactReducer, loading };\n","// const filterReducer = (state = \"\", action) => {\n//   switch (action.type) {\n//     case \"FILTER_CONTACT\":\n//       return action.payload;\n//     default:\n//       return state;\n//   }\n// };\n\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport filterContacts from \"./filterAction\";\n\nconst filterReducer = createReducer(\"\", {\n  [filterContacts]: (_, action) => action.payload,\n});\nexport default filterReducer;\n","// import { createStore, combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { contactReducer, loading } from \"./contacts/contactsReducer\";\nimport filter from \"./filter/filterReducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n    filter,\n    loading,\n  },\n});\n// const rootReducer = combineReducers({ contacts: contactReducer, filter: filterReducer });\n\n// const store = createStore(\n//   rootReducer,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}